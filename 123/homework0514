1.memory
정의
컴퓨터에 사용되는 장치 중에서 저장기능을 가지고 있는 것.
중앙처리장치(CPU)로부터 가까운 순서로 레지스터, 캐시, RAM과 ROM, 마지막으로 하드 디스크가 있다.

레지스터 : CPU 내장, 연산을 위한 저장소
캐시 : CPU와 RAM 사이 중간 저장소
RAM : 읽고 쓰기 모두 가능하지만 전원공급이 중단되면 사라짐. 휘발성 메모리
ROM : 읽는것만 가능. 부팅시에 BIOS 정보 등이 저장됨. 전원공급 중단되도 사라지지 않는 비휘발성 메모리.
하드디스크 : 대용량 저장매체, 당장 필요하진 않는 파일들이므로 속도는 느리지만 저장용량이 크다.

*메모리 관리 

-논리주소와 물리주소

 논리주소 : 프로그래밍시 변수를 심볼릭 어드레스라고 하며 이들이 가르키는 주소가 논리주소라 한다.
 물리주소 : cpu는 물리메모리에 적재된 것만 실행 가능하지만 물리메모리의 한계가 있다. 논리 메모리에 필요한 부분을 물리메모리에서 효율적으로 관리하는 것을 메모리관리라 한다.

cpu는 논리주소를 기준으로 물리주소를 찾고 호출한다. 즉 논리주소는 해당하는 값을 물리주소에 저장할 때 사용되며, 
cpu가 물리 메모리에 접근할 때 사용한다. 
cpu가 논리주소를 읽고, 논리주소를 통해서 물리 주소를 읽어서 물리 메모리에 접근하는 방식. 주소 바인딩
이 방식이 효율적이어야 한다.


2. 프로세스

정의

일을 처리하는 과정. 어떤 일을 해결하기 위해 진행되는 절차

실행중인 프로그램을 의미한다.

하드디스크에 존재하는 프로그램 실행시 실행을 위한 메모리 할당이 이루어지고, 할당된 메모리 공간으로 바이너리 코드가 올라가게 되는데 이때부터 프로세스라고 말한다.

Code 영역 : 프로그램을 실행시키는 실행 파일 명령어들이 올라가는 곳

Data 영역 : 전역변수, static 변수의 할당.

Heap 영역 : 동적할당을 위한 메모리 영역.

Stack 영역 : 지역변수, 함수 호출시 전달되는 인자(파라미터)를 위한 메모리 영역


*프로세스 스케줄링

1개의 cpu로 여러개의 스케줄을 처리해야할 때 순서를 정한다.
스케줄링 : cpu 할당순서 및 방법을 정하는 것을 의미( 기준은 스케줄링 알고리즘에 따라 )

*프로세스의 상태

new -> ready : new상태에서 프로세스 생성시, OS 커널 내의 Ready Queue에 올라간다.
ready -> running : Ready Queue에 있는 프로세스들을 CPU로 할당하게 됩니다.
running -> ready : Ready Queue에 있는 프로세스 B가 현재 running 중인 프로세스A보다 우선순위가 높을 경우, A는 ready로 넘어가고 B가 CPU를 할당받는다.
running -> blocked : 입/출력 이벤트에 의해 blocked 상태가 됨
blocked -> ready : 입출력 종료시 다시 ready로 이동
running -> terminated : 프로세스 종료시

**ready,blocked 상태에서는 다수의 프로세스 존재 가능, 하지만 싱글코어 기준 running 상태의 프로세스는 단 1개만 존재가능
